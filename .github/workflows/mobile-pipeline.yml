name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: npm ci

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make Gradlew executable
      run: cd android && chmod +x ./gradlew

    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleRelease

    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android/app/build/outputs/apk/release/*.apk
        retention-days: 30

  build-ios:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'

    - name: Install dependencies
      run: npm ci

    - name: Install iOS pods
      run: |
        cd ios
        pod install --repo-update

    - name: Build iOS App (unsigned)
      run: |
        cd ios
        xcodebuild -workspace *.xcworkspace \
          -scheme ${{ github.event.repository.name }} \
          -configuration Release \
          -destination generic/platform=iOS \
          -derivedDataPath ./build \
          CODE_SIGNING_ALLOWED=NO

    - name: Upload iOS build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: ios/build/Build/Products/Release-iphoneos/*.app
        retention-days: 30


    - name: Upload artifacts to S3
      if: always()
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2
      run: |
        aws s3 sync ./dist s3://mobile-latch/artifacts/${{ github.run_id }}/ --delete
        echo "Artifacts uploaded to s3://mobile-latch/artifacts/${{ github.run_id }}/"
